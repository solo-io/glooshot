// Code generated by solo-kit. DO NOT EDIT.

package v1

import (
	"fmt"

	"github.com/solo-io/go-utils/hashutils"
	"go.uber.org/zap"
)

type ApiSnapshot struct {
	Experiments ExperimentList
}

func (s ApiSnapshot) Clone() ApiSnapshot {
	return ApiSnapshot{
		Experiments: s.Experiments.Clone(),
	}
}

func (s ApiSnapshot) Hash() uint64 {
	return hashutils.HashAll(
		s.hashExperiments(),
	)
}

func (s ApiSnapshot) hashExperiments() uint64 {
	return hashutils.HashAll(s.Experiments.AsInterfaces()...)
}

func (s ApiSnapshot) HashFields() []zap.Field {
	var fields []zap.Field
	fields = append(fields, zap.Uint64("experiments", s.hashExperiments()))

	return append(fields, zap.Uint64("snapshotHash", s.Hash()))
}

type ApiSnapshotStringer struct {
	Version     uint64
	Experiments []string
}

func (ss ApiSnapshotStringer) String() string {
	s := fmt.Sprintf("ApiSnapshot %v\n", ss.Version)

	s += fmt.Sprintf("  Experiments %v\n", len(ss.Experiments))
	for _, name := range ss.Experiments {
		s += fmt.Sprintf("    %v\n", name)
	}

	return s
}

func (s ApiSnapshot) Stringer() ApiSnapshotStringer {
	return ApiSnapshotStringer{
		Version:     s.Hash(),
		Experiments: s.Experiments.NamespacesDotNames(),
	}
}
